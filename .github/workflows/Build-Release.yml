name: Build and Release
run-name: ${{ github.actor }} is building and releasing the app üèóÔ∏è ...

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  build:
    name: Archive and Release
    runs-on: ubuntu-latest

    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            .next/cache
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm install

      - name: Build
        run: |
          npm run build

      - name: Archive production artifacts
        run: |
          mkdir Microsoft-Speech-Service
          cd Microsoft-Speech-Service
          cp -r ../.next .next
          cp -r ../public public
          cp ../next.config.mjs next.config.mjs
          cp ../package.json package.json
          cp ../package-lock.json package-lock.json
          cp ../.env.template .env
          cp -r ../prisma prisma
          cp ../README.md README.md
          cp ../LICENSE LICENSE

      - name: Install SQLiteDB
        run: |
          cd Microsoft-Speech-Service
          npx prisma db push

      - name: check folder
        run: ls -la Microsoft-Speech-Service

      - name: Zip production artifacts
        run: |
          cd Microsoft-Speech-Service
          zip -r ../Microsoft-Speech-Service.zip .

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.0.4
          release_name: v0.0.4
          draft: false
          prerelease: true

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Microsoft-Speech-Service.zip
          asset_name: Microsoft-Speech-Service.zip
          asset_content_type: application/zip
